apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "zara-fetcher.fullname" . }}
  labels:
    {{- include "zara-fetcher.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "zara-fetcher.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "zara-fetcher.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "zara-fetcher.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: API_PORT
              value: "{{ .Values.service.port }}"
            - name: API_VERSION
              value: {{ .Chart.Version }}
            {{- if .Values.postgresql.enabled }}
            - name: APP_DB_HOST
              value: "{{ .Release.Name}}-postgresql"
            - name: APP_DB_PORT
              value: {{ .Values.postgresql.primary.service.ports.postgresql | quote }}
            - name: APP_DB_NAME
              value: {{ .Values.postgresql.auth.database | quote }}
            - name: APP_DB_USER
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: APP_DB_PASSWORD
              value: {{ .Values.postgresql.auth.password | quote }}
            
            {{- end }}
          
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/alive
              port: {{ .Values.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health/ready
              port: {{ .Values.service.port }}
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
